[38;2;127;132;156m   1[0m [38;2;205;214;244muse munsellspace::python_converter::PythonMunsellConverter;[0m
[38;2;127;132;156m   2[0m 
[38;2;127;132;156m   3[0m [38;2;205;214;244mfn main() -> Result<(), Box<dyn std::error::Error>> {[0m
[38;2;127;132;156m   4[0m [38;2;205;214;244m    let converter = PythonMunsellConverter::new();[0m
[38;2;127;132;156m   5[0m [38;2;205;214;244m    [0m
[38;2;127;132;156m   6[0m [38;2;205;214;244m    let test_colors = [[0m
[38;2;127;132;156m   7[0m [38;2;205;214;244m        ([239, 221, 229], "#EFDDE5"),[0m
[38;2;127;132;156m   8[0m [38;2;205;214;244m        ([92, 6, 37], "#5C0625"),[0m
[38;2;127;132;156m   9[0m [38;2;205;214;244m        ([92, 6, 38], "#5C0626"),[0m
[38;2;127;132;156m  10[0m [38;2;205;214;244m    ];[0m
[38;2;127;132;156m  11[0m [38;2;205;214;244m    [0m
[38;2;127;132;156m  12[0m [38;2;205;214;244m    for (rgb, hex) in test_colors {[0m
[38;2;127;132;156m  13[0m [38;2;205;214;244m        println\!("Testing {}: RGB{:?}", hex, rgb);[0m
[38;2;127;132;156m  14[0m [38;2;205;214;244m        match converter.srgb_to_munsell(rgb) {[0m
[38;2;127;132;156m  15[0m [38;2;205;214;244m            Ok(munsell) => {[0m
[38;2;127;132;156m  16[0m [38;2;205;214;244m                println\!("  Result: {:.1}{} {:.1}/{:.1}", munsell.hue, munsell.family, munsell.value, munsell.chroma);[0m
[38;2;127;132;156m  17[0m [38;2;205;214;244m            }[0m
[38;2;127;132;156m  18[0m [38;2;205;214;244m            Err(e) => {[0m
[38;2;127;132;156m  19[0m [38;2;205;214;244m                println\!("  Error: {}", e);[0m
[38;2;127;132;156m  20[0m [38;2;205;214;244m            }[0m
[38;2;127;132;156m  21[0m [38;2;205;214;244m        }[0m
[38;2;127;132;156m  22[0m [38;2;205;214;244m    }[0m
[38;2;127;132;156m  23[0m [38;2;205;214;244m    Ok(())[0m
[38;2;127;132;156m  24[0m [38;2;205;214;244m}[0m
